# syntax=ghcr.io/azure/dalec/frontend@sha256:cc3716ba0822cec2456a42674616b38f0f6634262f000e797aa0083a489412be

args:
  VERSION: v1.3.1
  COMMIT: c0fd202cbbe95266d890d97f1c255f94f1c7c106

name: kubernetes-eraser-manager
packager: Azure Container Upstream
vendor: Microsoft
license: Apache-2.0
website: https://github.com/eraser-dev/eraser
description: Manager component for Eraser

version: ${VERSION}
revision: 1

sources:
  eraser:
    git:
      url: https://github.com/eraser-dev/eraser.git
      commit: ${COMMIT}
      keepGitDir: true
  gomods:
    path: /build/gomodcache
    image:
      ref: mcr.microsoft.com/oss/go/microsoft/golang:1.20
      cmd:
        dir: /build/eraser
        mounts:
          - dest: /build/eraser
            spec:
              git:
                url: https://github.com/eraser-dev/eraser.git
                commit: ${COMMIT}
        steps:
          - command: go mod download
            env:
              GOMODCACHE: /build/gomodcache

dependencies:
  build:
    msft-golang:
    git:
    make:
    gcc:
  runtime:
    openssl-libs:

build:
  env:
    # Note: This is needed due to a bug in the golang package for mariner
    # https://github.com/microsoft/CBL-Mariner/issues/6363
    GOROOT: /usr/lib/golang

    VERSION: ${VERSION}
    GOPROXY: direct
    GOEXPERIMENT: opensslcrypto # NOTE: This is linux only. msft-golang 1.21 (not currently in the mariner repos) adds support for `systemcrypto`f which is cross platorm
    CGO_ENABLED: "1"
  steps:
    - command: |
        export GOMODCACHE="$(pwd)/gomods"

        cd eraser
        export LDFLAGS="$(build/version.sh "${VERSION}")"
        go build -tags requirefips -ldflags="${LDFLAGS}" -o bin/manager ./main.go

        # Make sure this is using the openssl crypto backend
        go tool nm bin/manager | grep -i openssl > /dev/null

artifacts:
  binaries:
    eraser/bin/manager: {}

image:
  entrypoint: manager

tests:
  - name: Check files
    files:
      /usr/bin/manager:
        permissions: 0755
